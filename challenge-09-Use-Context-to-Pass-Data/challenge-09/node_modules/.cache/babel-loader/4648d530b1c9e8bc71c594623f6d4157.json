{"ast":null,"code":"import _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/Scotch/challenge-09-Use-Context-to-Pass-Data/challenge-09/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/Scotch/challenge-09-Use-Context-to-Pass-Data/challenge-09/src/UserContext.js\";\nimport React from \"react\";\nexport const UserContext = React.createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        name = _React$useState2[0],\n        setName = _React$useState2[1];\n\n  const _React$useState3 = React.useState(),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        location = _React$useState4[0],\n        setLocation = _React$useState4[1];\n\n  return React.createElement(UserContext.Provider, {\n    value: {\n      name,\n      location,\n      setName,\n      setLocation\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/Scotch/challenge-09-Use-Context-to-Pass-Data/challenge-09/src/UserContext.js"],"names":["React","UserContext","createContext","UserProvider","children","useState","name","setName","location","setLocation"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAGD,KAAK,CAACE,aAAN,EAApB;AAEP,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,0BACpBJ,KAAK,CAACK,QAAN,EADoB;AAAA;AAAA,QACrCC,IADqC;AAAA,QAC/BC,OAD+B;;AAAA,2BAEZP,KAAK,CAACK,QAAN,EAFY;AAAA;AAAA,QAErCG,QAFqC;AAAA,QAE3BC,WAF2B;;AAI5C,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,IADK;AAELE,MAAAA,QAFK;AAGLD,MAAAA,OAHK;AAILE,MAAAA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGL,QARH,CADF;AAYD,CAhBM","sourcesContent":["import React from \"react\";\n\nexport const UserContext = React.createContext();\n\nexport const UserProvider = ({ children }) => {\n  const [name, setName] = React.useState();\n  const [location, setLocation] = React.useState();\n\n  return (\n    <UserContext.Provider\n      value={{\n        name,\n        location,\n        setName,\n        setLocation\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}