{"ast":null,"code":"var _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/Scotch/challenge-09-Use-Context-to-Pass-Data/challenge-09/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Name from \"./NameComponent\";\nimport Location from \"./LocationComponent\";\nimport UserForm from \"./UserForm\";\nimport \"./styles.css\";\nexport const UserContext = createContext();\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"is-size-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"We'll use the React Context API to pass and receive data in any component.\"), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(UserForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    className: \"is-size-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Display User Info Here \\uD83D\\uDC47\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"These two children components will receive data. These could be nested components.\"), React.createElement(Name, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Location, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n} // Wrap parent component with context provider\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/Scotch/challenge-09-Use-Context-to-Pass-Data/challenge-09/src/index.js"],"names":["React","ReactDOM","Name","Location","UserForm","UserContext","createContext","App","rootElement","document","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,cAAP;AAEA,OAAO,MAAMC,WAAW,GAAGC,aAAa,EAAjC;;AAEP,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFADF,EAKE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAJF,EAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CALF,CADF;AAmBD,C,CAED;;;AACA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAT,QAAQ,CAACU,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBH,WAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Name from \"./NameComponent\";\nimport Location from \"./LocationComponent\";\nimport UserForm from \"./UserForm\";\nimport \"./styles.css\";\n\nexport const UserContext = createContext();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2 className=\"is-size-4\">\n        We'll use the React Context API to pass and receive data in any\n        component.\n      </h2>\n      <div className=\"container\">\n        <UserForm />\n\n        <h2 className=\"is-size-4\">Display User Info Here ðŸ‘‡</h2>\n        <p>\n          These two children components will receive data. These could be nested\n          components.\n        </p>\n        <Name />\n        <Location />\n      </div>\n    </div>\n  );\n}\n\n// Wrap parent component with context provider\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}