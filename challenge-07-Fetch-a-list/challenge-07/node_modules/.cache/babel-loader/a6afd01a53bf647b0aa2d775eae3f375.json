{"ast":null,"code":"import _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/Scotch/challenge-07-Fetch-a-list/challenge-07/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/Scotch/challenge-07-Fetch-a-list/challenge-07/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport ScotchInfoBar from \"./ScotchInfoBar\";\nimport \"./styles.css\";\n\nfunction App() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        books = _useState2[0],\n        setBooks = _useState2[1];\n\n  const fetchData = async () => {\n    const response = await axios.get(\"https://www.anapioficeandfire.com/api/books?pageSize=30\");\n    setBooks(response.data);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Game of Thrones Books\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Fetch a list from an API and display it\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"fetch-button\",\n    onClick: fetchData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Fetch Data\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, books && books.map((book, index) => {\n    const cleanedDate = new Date(book.released).toDateString();\n    const authors = book.authors.join(\", \");\n    return React.createElement(\"div\", {\n      className: \"book\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Book \", index + 1), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, book.name), React.createElement(\"div\", {\n      className: \"details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\uD83D\\uDC68: \", authors), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\uD83D\\uDCD6: \", book.numberOfPages, \" pages\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"\\uD83C\\uDFD8\\uFE0F: \", book.country), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"\\u23F0: \", cleanedDate)));\n  })), React.createElement(ScotchInfoBar, {\n    seriesNumber: \"7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/Scotch/challenge-07-Fetch-a-list/challenge-07/src/index.js"],"names":["React","useState","ReactDOM","axios","ScotchInfoBar","App","books","setBooks","fetchData","response","get","data","map","book","index","cleanedDate","Date","released","toDateString","authors","join","name","numberOfPages","country","rootElement","document","getElementById","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,cAAP;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACaJ,QAAQ,CAAC,IAAD,CADrB;AAAA;AAAA,QACNK,KADM;AAAA,QACCC,QADD;;AAGb,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CACrB,yDADqB,CAAvB;AAIAH,IAAAA,QAAQ,CAACE,QAAQ,CAACE,IAAV,CAAR;AACD,GAND;;AAQA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAEH,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CALF,EAaE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,IACJA,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,UAAMC,WAAW,GAAG,IAAIC,IAAJ,CAASH,IAAI,CAACI,QAAd,EAAwBC,YAAxB,EAApB;AACA,UAAMC,OAAO,GAAGN,IAAI,CAACM,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAhB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEN,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAUA,KAAK,GAAG,CAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACQ,IAAV,CAFF,EAIE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAQF,OAAR,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAQN,IAAI,CAACS,aAAb,WAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAST,IAAI,CAACU,OAAd,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAOR,WAAP,CAJF,CAJF,CADF;AAaD,GAjBD,CAFJ,CAbF,EAmCE,oBAAC,aAAD;AAAe,IAAA,YAAY,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,CADF;AAuCD;;AAED,MAAMS,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAxB,QAAQ,CAACyB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBH,WAAzB","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport ScotchInfoBar from \"./ScotchInfoBar\";\nimport \"./styles.css\";\n\nfunction App() {\n  const [books, setBooks] = useState(null);\n\n  const fetchData = async () => {\n    const response = await axios.get(\n      \"https://www.anapioficeandfire.com/api/books?pageSize=30\"\n    );\n\n    setBooks(response.data);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Game of Thrones Books</h1>\n      <h2>Fetch a list from an API and display it</h2>\n\n      {/* Fetch data from API */}\n      <div>\n        <button className=\"fetch-button\" onClick={fetchData}>\n          Fetch Data\n        </button>\n        <br />\n      </div>\n\n      {/* Display data from API */}\n      <div className=\"books\">\n        {books &&\n          books.map((book, index) => {\n            const cleanedDate = new Date(book.released).toDateString();\n            const authors = book.authors.join(\", \");\n\n            return (\n              <div className=\"book\" key={index}>\n                <h3>Book {index + 1}</h3>\n                <h2>{book.name}</h2>\n\n                <div className=\"details\">\n                  <p>üë®: {authors}</p>\n                  <p>üìñ: {book.numberOfPages} pages</p>\n                  <p>üèòÔ∏è: {book.country}</p>\n                  <p>‚è∞: {cleanedDate}</p>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n\n      <ScotchInfoBar seriesNumber=\"7\" />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}